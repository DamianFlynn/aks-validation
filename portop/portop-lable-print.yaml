#  ------------------------------------------------------------
#   Copyright (c) Microsoft Corporation.  All rights reserved.
#   Licensed under the MIT License (MIT). See License.txt in the repo root #  for license information.
#  ------------------------------------------------------------


apiVersion: apps/v1
kind: Deployment
metadata:
  name: portop-label-print-deployment
  namespace: portop
  labels:
    app.kubernetes.io/name: portop-label-print
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: portop-label-print
  template:
    metadata:
      labels:
        app.kubernetes.io/name: portop-label-print
    spec:
      automountServiceAccountToken: false
      securityContext:
        runAsUser: 10001
        runAsGroup: 3000
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - portop-label-print
            topologyKey: "kubernetes.io/hostname"
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - traefik-ingress-ilb
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: portop-label-print
        image: walwilreg.azurecr.io/portop-label-print:latest
        imagePullPolicy: Always
        # securityContext:
        #   allowPrivilegeEscalation: false
        #   readOnlyRootFilesystem: false
        #   capabilities:
        #     drop:
        #       - all
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 256Mi
        ports:
        - containerPort: 80
        env:
        - name: REDIS_ADDRESS
          value: portop-redis
      nodeSelector:
       agentpool: npuser01
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: portop-label-print-pdb
  namespace: portop
spec:
  minAvailable: 75%
  selector:
    matchLabels:
      app.kubernetes.io/name: portop-label-print
---
apiVersion: v1
kind: Service
metadata:
  name: portop-label-print-ingress-ilb
  namespace: portop
#  labels:
#    app.kubernetes.io/name: portop-label-print-ingress-ilb
#    app.kubernetes.io/instance: portop-label-print-ingress-ilb
  annotations:
     service.beta.kubernetes.io/azure-load-balancer-internal: "true"
     service.beta.kubernetes.io/azure-load-balancer-internal-subnet: "ResourceSubnet"
spec:
  type: LoadBalancer
  loadBalancerIP: 10.182.18.11 # ResourcesSubnet
#  externalTrafficPolicy: Local
  selector:
    app.kubernetes.io/name: portop-label-print-detail
  ports:
  - name: http
    port: 80

---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: portop-label-print-ingress
#   namespace: portop
#   annotations:
#     kubernetes.io/ingress.allow-http: "false"
#     # defines controller implementing this ingress resource: https://docs.microsoft.com/en-us/azure/dev-spaces/how-to/ingress-https-traefik
#     # ingress.class annotation is being deprecated in Kubernetes 1.18: https://kubernetes.io/docs/concepts/services-networking/ingress/#deprecated-annotation
#     # For backwards compatibility, when this annotation is set, precedence is given over the new field ingressClassName under spec.
#     kubernetes.io/ingress.class: traefik-internal
#     traefik.ingress.kubernetes.io/router.entrypoints: websecure
#     traefik.ingress.kubernetes.io/router.tls: "true"
#     traefik.ingress.kubernetes.io/router.tls.options: default
#     traefik.ingress.kubernetes.io/router.middlewares: app-gateway-snet@file, gzip-compress@file
# spec:
#   # ingressClassName: "traefik-internal"
#   tls:
#   - hosts:
#       - bu0001a0008-00.aks-ingress.contoso.com
#         # it is possible to opt for certificate management strategy with dedicated
#         # certificates for each TLS SNI route.
#         # In this Rereference Implementation for the sake of simplicity we use a
#         # wildcard default certificate added at Ingress Controller configuration level which is *.example.com
#         # secretName: <bu0001a0008-00-example-com-tls-secret>
#   rules:
#   - host: bu0001a0008-00.aks-ingress.contoso.com
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: portop-label-print-service
#             port:
#               number: 8080
# ---
