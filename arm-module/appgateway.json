{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "defaultValue": "westeurope",
      "type": "string"
    },
    "logAnalyticsWorkspaceId": {
      "defaultValue": "/subscriptions/283dd4da-759e-4ceb-a6ef-618ebebb7705/resourcegroups/p-mgt-log/providers/microsoft.operationalinsights/workspaces/p-mgt-log-ws",
      "type": "string"
    },
    "appGatewaySubnetId": {
      "defaultValue": "/subscriptions/283dd4da-759e-4ceb-a6ef-618ebebb7705/resourceGroups/p-we1k8s-net/providers/Microsoft.Network/virtualNetworks/p-we1k8s-net-vnet/subnets/AppGatewaySubnet",
      "type": "string"
    },
    "keyVaultResourceId": {
      "defaultValue": "/subscriptions/283dd4da-759e-4ceb-a6ef-618ebebb7705/resourceGroups/p-we1k8s-aks/providers/Microsoft.KeyVault/vaults/p-we1k8s-aks-20220210-kv",
      "type": "string"
    },
    "frontendPipId": {
      "defaultValue": "/subscriptions/283dd4da-759e-4ceb-a6ef-618ebebb7705/resourceGroups/p-we1k8s-agw/providers/Microsoft.Network/publicIPAddresses/p-we1ks8-apg-listner01-pip",
      "type": "string"
    },
    "miAppGatewayId": {
      "defaultValue": "/subscriptions/283dd4da-759e-4ceb-a6ef-618ebebb7705/resourceGroups/p-we1k8s-aks/providers/Microsoft.ManagedIdentity/userAssignedIdentities/p-we1k8s-aks-appgateway-identity",
      "type": "string"
    },
    "domainName": {
      "type": "string",
      "defaultValue": "p3.walwil.com"
    }

  },
  "variables": {
    "keyVaultName": "p-we1k8s-aks-20220210-kv",
    "agwName": "p-we1k8s-aks-agw",
    "kvAppSSLCert": "wildcard-p3-walwil-com",
    "kvIngressSSLCert": "traefik-ingress-internal-aks-ingress-tls",
    "aksBackendDomainName": "[concat('aks-ingress.', parameters('domainName'))]",


    "keyVaultSubId":"[split(parameters('keyVaultResourceId'),'/')[2]]",
    "keyVaultRg": "[split(parameters('keyVaultResourceId'),'/')[4]]",
    // Roles

    "keyVaultReader": "[concat(subscription().Id, '/providers/Microsoft.Authorization/roleDefinitions/21090545-7ca7-4776-b22c-e363652d74d2')]",
    "keyVaultSecretsUserRole": "[concat(subscription().Id, '/providers/Microsoft.Authorization/roleDefinitions/4633458b-17de-408a-b874-0445c86b69e6')]"


  },
  "resources": [
    {
      "type": "Microsoft.Network/applicationGateways",
      "apiVersion": "2020-05-01",
      "name": "[variables('agwName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        // "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        // "[resourceId('Microsoft.Network/privateEndpoints', 'nodepools-to-akv')]"
        // "[resourceId('Microsoft.KeyVault/vaults/providers/roleAssignments', variables('keyVaultName'), 'Microsoft.Authorization', guid(resourceGroup().id, 'variables('mi-appgateway')', variables('keyVaultReader')))]",
        // "[resourceId('Microsoft.KeyVault/vaults/providers/roleAssignments', variables('keyVaultName'), 'Microsoft.Authorization', guid(resourceGroup().id, 'variables('mi-appgateway')', variables('keyVaultSecretsUserRole')))]"
      ],
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[parameters('miAppGatewayId')]": {}
        }
      },
      "zones": "[pickZones('Microsoft.Network', 'applicationGateways', parameters('location'), 3)]",
      "properties": {
        "sku": {
          "name": "WAF_v2",
          "tier": "WAF_v2"
        },
        "sslPolicy": {
          "policyType": "Custom",
          "cipherSuites": [
            "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
            "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"
          ],
          "minProtocolVersion": "TLSv1_2"
        },
        "trustedRootCertificates": [
          {
            "name": "aks-ingess-cert",
            "properties": {
              "keyVaultSecretId": "https://p-we1k8s-aks-20220210-kv.vault.azure.net/secrets/traefik-ingress-internal-aks-ingress-tls/f6da2fc34b1f4505a69313e40234bccb"

              //"keyVaultSecretId": "[concat('https://',variables('keyVaultName'),'.vault.azure.net/secrets/',variables('kvIngressSSLCert'),'/4ba6fef81ea54017a6d47b9871eaee4b')]"
              //"keyVaultSecretId": "[concat(parameters('keyVaultResourceId'),'/secrets/',variables('kvIngressSSLCert'))]"
              //"keyVaultSecretId": "[concat(reference(variables('keyVaultName')).vaultUri,'secrets/',variables('kvIngressSSLCert'))]"
            }
          }
        ],
        "gatewayIPConfigurations": [
          {
            "name": "apw-ip-configuration",
            "properties": {
              "subnet": {
                "id": "[parameters('appGatewaySubnetId')]"
              }
            }
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "apw-frontend-ip-configuration",
            "properties": {
              "PublicIPAddress": {
                "id": "[parameters('frontendPipId')]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "port-443",
            "properties": {
              "port": 443
            }
          }
        ],
        "autoscaleConfiguration": {
          "minCapacity": 0,
          "maxCapacity": 10
        },
        "webApplicationFirewallConfiguration": {
          "enabled": true,
          "firewallMode": "Prevention",
          "ruleSetType": "OWASP",
          "ruleSetVersion": "3.2",
          "exclusions": [],
          "fileUploadLimitInMb": 10,
          "disabledRuleGroups": []
        },
        "enableHttp2": false,
        "sslCertificates": [
          {
            "name": "[concat(variables('agwName'), '-ssl-certificate')]",
            "properties": {
              "keyVaultSecretId": "https://p-we1k8s-aks-20220210-kv.vault.azure.net/secrets/traefik-ingress-internal-aks-ingress-tls/af643c6f59d04784ac4de5c38ffb37f5"
              //"keyVaultSecretId": "[concat('https://',variables('keyVaultName'),'.vault.azure.net/secrets/',variables('kvAppSSLCert'))]"
              
              //"keyVaultSecretId": "[concat(reference( variables('keyVaultName')).vaultUri,'secrets/',variables('kvAppSSLCert'))]"
              //"keyVaultSecretId": "[concat(parameters('keyVaultResourceId'),'/secrets/',variables('kvAppSSLCert'))]"
            }
          }
        ],
        "probes": [
          {
            "name": "[concat('probe-', variables('aksBackendDomainName'))]",
            "properties": {
              "protocol": "Https",
              "path": "/favicon.ico",
              "interval": 30,
              "timeout": 30,
              "unhealthyThreshold": 3,
              "pickHostNameFromBackendHttpSettings": true,
              "minServers": 0,
              "match": {
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('aksBackendDomainName')]",
            "properties": {
              "backendAddresses": [
                {
                  "fqdn": "[variables('aksBackendDomainName')]"
                }
              ]
            }
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "aks-ingress-backendpool-httpsettings",
            "properties": {
              "port": 443,
              "protocol": "Https",
              "cookieBasedAffinity": "Disabled",
              "pickHostNameFromBackendAddress": true,
              "requestTimeout": 20,
              "probe": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/probes', variables('agwName'), concat('probe-', variables('aksBackendDomainName')))]"
              },
              "trustedRootCertificates": [
                {
                  "id": "[resourceId('Microsoft.Network/applicationGateways/trustedRootCertificates', variables('agwName'), 'aks-ingess-cert')]"
                }
              ]
            }
          }
        ],
        "httpListeners": [
          {
            "name": "listener-https",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', variables('agwName'), 'apw-frontend-ip-configuration')]"
              },
              "frontendPort": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', variables('agwName'), 'port-443')]"
              },
              "protocol": "Https",
              "sslCertificate": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/sslCertificates', variables('agwName'),  concat(variables('agwName'), '-ssl-certificate'))]"
              },
              "hostName": "[concat('portop-web.', parameters('domainName'))]",
              "hostNames": [],
              "requireServerNameIndication": true
            }
          }
        ],
        "requestRoutingRules": [
          {
            "Name": "apw-routing-rules",
            "properties": {
              "RuleType": "Basic",
              "httpListener": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', variables('agwName'), 'listener-https')]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', variables('agwName'), variables('aksBackendDomainName'))]"
              },
              "backendHttpSettings": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', variables('agwName'), 'aks-ingress-backendpool-httpsettings')]"
              }
            }
          }
        ]
      },
      "resources": [
        {
          "type": "providers/diagnosticSettings",
          "apiVersion": "2017-05-01-preview",
          "name": "Microsoft.Insights/default",
          "dependsOn": [
            "[resourceId('Microsoft.Network/applicationGateways', variables('agwName'))]"
          ],
          "properties": {
            "workspaceId": "[parameters('logAnalyticsWorkspaceId')]",
            "logs": [
              {
                "category": "ApplicationGatewayAccessLog",
                "enabled": true
              },
              {
                "category": "ApplicationGatewayPerformanceLog",
                "enabled": true
              },
              {
                "category": "ApplicationGatewayFirewallLog",
                "enabled": true
              }
            ]
          }
        }
      ]
    }
  ]
}